/*
   This file was generated automatically by Alchitry Labs version 1.2.0.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module game_miniBeta_2 (
    input p1_button,
    input p2_button,
    input clk,
    input rst,
    output reg [15:0] debug_out,
    output reg [15:0] p1_out,
    output reg [15:0] p2_out,
    output reg debug_slowclock,
    output reg debug_vcclock,
    output reg decimal_counter_increase,
    output reg decimal_counter_rst
  );
  
  
  
  reg [15:0] inputAlu_a;
  
  reg [15:0] inputAlu_b;
  
  wire [16-1:0] M_game_alu_out;
  wire [3-1:0] M_game_alu_zvn;
  reg [16-1:0] M_game_alu_a;
  reg [16-1:0] M_game_alu_b;
  reg [6-1:0] M_game_alu_alufn_signal;
  alu_10 game_alu (
    .a(M_game_alu_a),
    .b(M_game_alu_b),
    .alufn_signal(M_game_alu_alufn_signal),
    .out(M_game_alu_out),
    .zvn(M_game_alu_zvn)
  );
  
  wire [1-1:0] M_edge_detector_variableCounter_out;
  reg [1-1:0] M_edge_detector_variableCounter_in;
  edge_detector_4 edge_detector_variableCounter (
    .clk(clk),
    .in(M_edge_detector_variableCounter_in),
    .out(M_edge_detector_variableCounter_out)
  );
  wire [1-1:0] M_game_timer_detector_out;
  reg [1-1:0] M_game_timer_detector_in;
  edge_detector_4 game_timer_detector (
    .clk(clk),
    .in(M_game_timer_detector_in),
    .out(M_game_timer_detector_out)
  );
  wire [6-1:0] M_game_controlunit_alufn;
  wire [3-1:0] M_game_controlunit_asel;
  wire [3-1:0] M_game_controlunit_bsel;
  wire [2-1:0] M_game_controlunit_alu_out_sel;
  wire [4-1:0] M_game_controlunit_regfile_write_address;
  wire [4-1:0] M_game_controlunit_regfile_read_address_a;
  wire [4-1:0] M_game_controlunit_regfile_read_address_b;
  wire [1-1:0] M_game_controlunit_we_regfile;
  wire [1-1:0] M_game_controlunit_decimal_counter_increase;
  wire [1-1:0] M_game_controlunit_decimal_counter_rst;
  wire [4-1:0] M_game_controlunit_debug;
  reg [1-1:0] M_game_controlunit_increase_counter;
  reg [1-1:0] M_game_controlunit_decrease_timer;
  reg [16-1:0] M_game_controlunit_regfile_datain;
  reg [1-1:0] M_game_controlunit_p1_button;
  reg [1-1:0] M_game_controlunit_p2_button;
  game_CU_11 game_controlunit (
    .clk(clk),
    .rst(rst),
    .increase_counter(M_game_controlunit_increase_counter),
    .decrease_timer(M_game_controlunit_decrease_timer),
    .regfile_datain(M_game_controlunit_regfile_datain),
    .p1_button(M_game_controlunit_p1_button),
    .p2_button(M_game_controlunit_p2_button),
    .alufn(M_game_controlunit_alufn),
    .asel(M_game_controlunit_asel),
    .bsel(M_game_controlunit_bsel),
    .alu_out_sel(M_game_controlunit_alu_out_sel),
    .regfile_write_address(M_game_controlunit_regfile_write_address),
    .regfile_read_address_a(M_game_controlunit_regfile_read_address_a),
    .regfile_read_address_b(M_game_controlunit_regfile_read_address_b),
    .we_regfile(M_game_controlunit_we_regfile),
    .decimal_counter_increase(M_game_controlunit_decimal_counter_increase),
    .decimal_counter_rst(M_game_controlunit_decimal_counter_rst),
    .debug(M_game_controlunit_debug)
  );
  wire [16-1:0] M_players_out_a;
  wire [16-1:0] M_players_out_b;
  wire [16-1:0] M_players_out;
  wire [32-1:0] M_players_all_scores;
  wire [4-1:0] M_players_all_buttons;
  wire [16-1:0] M_players_counter_out;
  reg [4-1:0] M_players_write_address;
  reg [1-1:0] M_players_we;
  reg [16-1:0] M_players_data;
  reg [4-1:0] M_players_read_address_a;
  reg [4-1:0] M_players_read_address_b;
  game_miniRegfiles_12 players (
    .clk(clk),
    .rst(rst),
    .write_address(M_players_write_address),
    .we(M_players_we),
    .data(M_players_data),
    .read_address_a(M_players_read_address_a),
    .read_address_b(M_players_read_address_b),
    .out_a(M_players_out_a),
    .out_b(M_players_out_b),
    .out(M_players_out),
    .all_scores(M_players_all_scores),
    .all_buttons(M_players_all_buttons),
    .counter_out(M_players_counter_out)
  );
  wire [1-1:0] M_vc_out;
  wire [16-1:0] M_vc_debug;
  variable_counter_13 vc (
    .clk(clk),
    .rst(rst),
    .out(M_vc_out),
    .debug(M_vc_debug)
  );
  wire [1-1:0] M_slow_timer_value;
  counter_14 slow_timer (
    .clk(clk),
    .rst(rst),
    .value(M_slow_timer_value)
  );
  
  always @* begin
    M_game_timer_detector_in = M_slow_timer_value;
    M_edge_detector_variableCounter_in = M_vc_out;
    M_game_controlunit_increase_counter = M_edge_detector_variableCounter_out;
    M_game_controlunit_decrease_timer = M_game_timer_detector_out;
    M_game_controlunit_p1_button = p1_button;
    M_game_controlunit_p2_button = p2_button;
    decimal_counter_increase = M_game_controlunit_decimal_counter_increase;
    decimal_counter_rst = M_game_controlunit_decimal_counter_rst;
    M_players_we = M_game_controlunit_we_regfile;
    M_players_write_address = M_game_controlunit_regfile_write_address;
    M_players_read_address_a = M_game_controlunit_regfile_read_address_a;
    M_players_read_address_b = M_game_controlunit_regfile_read_address_b;
    M_game_controlunit_regfile_datain = M_players_out_b;
    
    case (M_game_controlunit_asel)
      2'h0: begin
        inputAlu_a = M_players_out_a;
      end
      2'h1: begin
        inputAlu_a = 1'h1;
      end
      2'h3: begin
        inputAlu_a = 5'h1e;
      end
      default: begin
        inputAlu_a = 1'h0;
      end
    endcase
    
    case (M_game_controlunit_bsel)
      2'h0: begin
        inputAlu_b = M_players_out_b;
      end
      2'h1: begin
        inputAlu_b = 1'h1;
      end
      2'h3: begin
        inputAlu_b = 2'h3;
      end
      2'h2: begin
        inputAlu_b = 1'h0;
      end
      default: begin
        inputAlu_b = 1'h0;
      end
    endcase
    M_game_alu_a = inputAlu_a;
    M_game_alu_b = inputAlu_b;
    M_game_alu_alufn_signal = M_game_controlunit_alufn;
    
    case (M_game_controlunit_alu_out_sel)
      2'h1: begin
        M_players_data = 16'hffff;
      end
      2'h2: begin
        M_players_data = 16'h000f;
      end
      2'h3: begin
        M_players_data = 1'h0;
      end
      default: begin
        M_players_data = M_game_alu_out;
      end
    endcase
    debug_out = M_players_out;
    p1_out = M_players_all_scores[0+15-:16];
    p2_out = M_players_all_scores[16+15-:16];
    debug_slowclock = M_slow_timer_value;
    debug_vcclock = M_vc_out;
  end
endmodule
