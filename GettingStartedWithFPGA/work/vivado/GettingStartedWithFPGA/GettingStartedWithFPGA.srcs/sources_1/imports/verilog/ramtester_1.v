/*
   This file was generated automatically by Alchitry Labs version 1.2.0.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module ramtester_1 (
    input clk,
    input [5:0] write_address,
    input button_enter,
    input [15:0] data,
    input [5:0] read_address,
    output reg [15:0] out
  );
  
  
  
  wire [16-1:0] M_memory_unit_read_data;
  reg [7-1:0] M_memory_unit_waddr;
  reg [16-1:0] M_memory_unit_write_data;
  reg [1-1:0] M_memory_unit_write_en;
  reg [7-1:0] M_memory_unit_raddr;
  simple_dual_ram_5 #(.SIZE(5'h10), .DEPTH(8'h80)) memory_unit (
    .wclk(clk),
    .rclk(clk),
    .waddr(M_memory_unit_waddr),
    .write_data(M_memory_unit_write_data),
    .write_en(M_memory_unit_write_en),
    .raddr(M_memory_unit_raddr),
    .read_data(M_memory_unit_read_data)
  );
  
  
  localparam WRITETEST_1_ram_test = 3'd0;
  localparam WRITETEST_2_ram_test = 3'd1;
  localparam WRITETEST_3_ram_test = 3'd2;
  localparam WRITETEST_4_ram_test = 3'd3;
  localparam READ_ram_test = 3'd4;
  localparam SHOW_ram_test = 3'd5;
  
  reg [2:0] M_ram_test_d, M_ram_test_q = WRITETEST_1_ram_test;
  
  always @* begin
    M_ram_test_d = M_ram_test_q;
    
    M_memory_unit_waddr = 1'bx;
    M_memory_unit_write_en = 1'h0;
    M_memory_unit_write_data = 1'bx;
    M_memory_unit_raddr = 1'bx;
    out = M_memory_unit_read_data;
    
    case (M_ram_test_q)
      WRITETEST_1_ram_test: begin
        M_memory_unit_waddr = 6'h00;
        M_memory_unit_write_data = 16'hffff;
        M_memory_unit_write_en = 1'h1;
        M_ram_test_d = WRITETEST_2_ram_test;
      end
      WRITETEST_2_ram_test: begin
        M_memory_unit_waddr = 6'h01;
        M_memory_unit_write_data = 16'h0fff;
        M_memory_unit_write_en = 1'h1;
        M_ram_test_d = WRITETEST_3_ram_test;
      end
      WRITETEST_3_ram_test: begin
        M_memory_unit_waddr = 6'h02;
        M_memory_unit_write_data = 16'h00ff;
        M_memory_unit_write_en = 1'h1;
        M_ram_test_d = WRITETEST_4_ram_test;
      end
      WRITETEST_4_ram_test: begin
        M_memory_unit_waddr = 6'h03;
        M_memory_unit_write_data = 16'h000f;
        M_memory_unit_write_en = 1'h1;
        M_ram_test_d = READ_ram_test;
      end
      READ_ram_test: begin
        M_memory_unit_raddr = read_address;
        if (button_enter) begin
          M_memory_unit_waddr = write_address;
          M_memory_unit_write_data = data;
          M_memory_unit_write_en = 1'h1;
        end
        M_ram_test_d = READ_ram_test;
      end
    endcase
  end
  
  always @(posedge clk) begin
    M_ram_test_q <= M_ram_test_d;
  end
  
endmodule
