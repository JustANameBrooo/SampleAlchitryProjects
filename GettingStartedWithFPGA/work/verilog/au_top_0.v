/*
   This file was generated automatically by Alchitry Labs version 1.2.0.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module au_top_0 (
    input clk,
    input rst_n,
    output reg [7:0] led,
    input usb_rx,
    output reg usb_tx,
    output reg [2:0] customout,
    output reg [23:0] io_led,
    output reg [7:0] io_seg,
    output reg [3:0] io_sel,
    input [4:0] io_button,
    input [23:0] io_dip
  );
  
  
  
  reg rst;
  
  wire [16-1:0] M_ram_out;
  reg [6-1:0] M_ram_write_address;
  reg [1-1:0] M_ram_button_enter;
  reg [16-1:0] M_ram_data;
  reg [6-1:0] M_ram_read_address;
  ramtester_1 ram (
    .clk(clk),
    .write_address(M_ram_write_address),
    .button_enter(M_ram_button_enter),
    .data(M_ram_data),
    .read_address(M_ram_read_address),
    .out(M_ram_out)
  );
  
  wire [1-1:0] M_buttonconditioner_out;
  reg [1-1:0] M_buttonconditioner_in;
  button_conditioner_2 buttonconditioner (
    .clk(clk),
    .in(M_buttonconditioner_in),
    .out(M_buttonconditioner_out)
  );
  
  wire [1-1:0] M_buttonedge_out;
  reg [1-1:0] M_buttonedge_in;
  edge_detector_3 buttonedge (
    .clk(clk),
    .in(M_buttonedge_in),
    .out(M_buttonedge_out)
  );
  
  wire [1-1:0] M_reset_cond_out;
  reg [1-1:0] M_reset_cond_in;
  reset_conditioner_4 reset_cond (
    .clk(clk),
    .in(M_reset_cond_in),
    .out(M_reset_cond_out)
  );
  
  always @* begin
    M_reset_cond_in = ~rst_n;
    rst = M_reset_cond_out;
    usb_tx = usb_rx;
    led = 8'h00;
    io_led = 24'h000000;
    io_seg = 8'hff;
    io_sel = 4'hf;
    customout = 3'h7;
    io_led[0+7-:8] = io_dip[0+7-:8];
    io_led[0+7+0-:1] = io_button[0+0-:1];
    M_ram_read_address = io_dip[0+0+5-:6];
    M_ram_write_address = io_dip[8+0+5-:6];
    M_ram_data = {8'h00, io_dip[16+7-:8]};
    M_buttonconditioner_in = io_button[0+0-:1];
    M_buttonedge_in = M_buttonconditioner_out;
    M_ram_button_enter = M_buttonedge_out;
    io_led[16+7-:8] = M_ram_out[8+7-:8];
    io_led[8+7-:8] = M_ram_out[0+7-:8];
  end
endmodule
